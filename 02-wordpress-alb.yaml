---
AWSTemplateFormatVersion: 2010-09-09

Description: Stack to create ALB 

Metadata:
 Authors:
  Description: https://github.com/lzrocha
  
 AWS::CloudFormation::Interface:
    ParameterGroups:
     - Label: 
         default: ALB Configuration
       Parameters: 
        - VpcId 
        - PublicAlbAcmCertificate
        - PublicAlbSecurityGroup
        - Subnet
        - NumberOfSubnets

    ParameterLabels:
      VpcId:
        default: Vpc Id
      PublicAlbAcmCertificate:
        default: ALB Certificate ARN
      PublicAlbSecurityGroup:
        default: Public ALB Security Group
      NumberOfSubnets:
        default: Number of subnets
      Subnet:
        default: Subnets
        
Parameters:

      NumberOfSubnets:
        AllowedValues:
        - 2
        - 3
        - 4
        - 5
        - 6
        Default: 3
        Description: Number of subnets. This must match your selections in the list of subnets below.
        Type: String 
      PublicAlbAcmCertificate:
        AllowedPattern: ^$|(arn:aws:acm:)([a-z0-9/:-])*([a-z0-9])$
        Description: '[ Optional ] The AWS Certification Manager certificate ARN for the ALB certificate - this certificate should be created in the region you wish to run the ALB and must reference the WordPress domain name you use below.'
        Type: String
      PublicAlbSecurityGroup:
        Description: Select the ALB security group.
        Type: AWS::EC2::SecurityGroup::Id
      Subnet:
        Description: Select existing subnets. The number selected must match the number of subnets above. Subnets selected must be in separate AZs.
        Type: List<AWS::EC2::Subnet::Id>
      VpcId:
        Description: Select an existing Vpc
        Type: AWS::EC2::VPC::Id
  
Resources:
  
  PublicAlbListenerNoSslCertificate:
    Type : AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
       - Type: "redirect"
         RedirectConfig:
           Protocol: "HTTPS"
           Port: "443"
           Host: "#{host}"
           Path: "/#{path}"
           Query: "#{query}"
           StatusCode: "HTTP_301"
      LoadBalancerArn: !Ref PublicApplicationLoadBalancer
      Port: 80
      Protocol: "HTTP"
  PublicAlbListenerSslCertificate:
    Type : AWS::ElasticLoadBalancingV2::Listener
    Properties:
      Certificates:
      - CertificateArn: !Ref PublicAlbAcmCertificate
      DefaultActions:
      - Type: forward
        TargetGroupArn: !Ref PublicAlbTargetGroup
      LoadBalancerArn: !Ref PublicApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
  PublicApplicationLoadBalancer: 
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets: !Ref Subnet
      LoadBalancerAttributes:
      - Key: idle_timeout.timeout_seconds
        Value: 60
      SecurityGroups:
      - !Ref PublicAlbSecurityGroup
      Tags:
      - Key: Name
        Value: !Join [ '', [ 'Public ALB / ', !Ref 'AWS::StackName' ] ]
  PublicAlbTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /wp-login.php
      HealthCheckTimeoutSeconds: 5
      Port: 80
      Protocol: HTTP
      Tags:
      - Key: Name
        Value: !Join [ '', [ 'Public ALB / ', !Ref 'AWS::StackName' ] ]
      UnhealthyThresholdCount: 5
      VpcId: !Ref VpcId
      
Outputs:

  PublicAlbTargetGroup:
    Value:
      !Ref PublicAlbTargetGroup
  PublicAlbCanonicalHostedZoneId:
    Value:
      !GetAtt PublicApplicationLoadBalancer.CanonicalHostedZoneID
  PublicAlbDnsName:
    Value:
      !GetAtt PublicApplicationLoadBalancer.DNSName
  PublicAlbFullName:
    Value:
      !GetAtt PublicApplicationLoadBalancer.LoadBalancerFullName
  PublicAlbHostname:
    Value:
      !Join [ '', [ 'https://', !GetAtt PublicApplicationLoadBalancer.DNSName ] ]